/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vds.UI.SystemAdmin;

import com.mysql.cj.jdbc.PreparedStatementWrapper;
import com.mysql.cj.protocol.Resultset;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
//import vds.Business.Role.ClinicAdmin.ClinicAdmin;
import vds.Database.DBConnection;

/**
 *
 * @author jigne
 */
public class ManageClinicForm extends javax.swing.JFrame {

    /**
     * Creates new form ManageClinicForm
     */
    DBConnection conn;
    Connection sqlConn;
    Resultset rs;
    PreparedStatementWrapper pst = null;
    String clinicEmail;

    public ManageClinicForm() {
        initComponents();
        setLocationRelativeTo(null);
        conn = new DBConnection();
        sqlConn = DBConnection.connectDB();
        if (conn == null) {
            JOptionPane.showMessageDialog(this,
                    "Database Error", "Failure", JOptionPane.ERROR_MESSAGE);
        } else {
            PreparedStatement pst;
            try {
                pst = sqlConn.prepareStatement("SELECT * from `vds`.`user` WHERE Role=?");
                pst.setString(1, "ClinicAdmin");
                ResultSet rs = pst.executeQuery();
                ArrayList<String> clinicAdmins = new ArrayList<String>();
                while (rs.next()) {
                    clinicAdmins.add(rs.getString(2));
                    System.out.println(rs.getString(2));
                }
                clinicAdminDropDown.setModel(new DefaultComboBoxModel<String>(clinicAdmins.toArray(new String[0])));
            } catch (SQLException ex) {
                Logger.getLogger(ManageHospitalForm.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        ParentPanel = new javax.swing.JPanel();
        AddClinicPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        contactField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        emailField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cityField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        stateField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        countryField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        clinicNameField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        clinicAdminDropDown = new javax.swing.JComboBox<>();
        AddClinicButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        locationTextField = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        DeleteClinicPanel = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        findClinicDelete = new javax.swing.JComboBox<>();
        clinicDelete = new javax.swing.JTextField();
        DeleteClinicButton = new javax.swing.JButton();
        ViewClinicPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        UpdateClinicPanel = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        findClinic = new javax.swing.JComboBox<>();
        findClinicBy = new javax.swing.JTextField();
        FindClinicUpdate = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        clinicContact = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        clinicCity = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        clinicState = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        clinicCountry = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        clinicName = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        UpdateClinicButton = new javax.swing.JButton();
        location = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        clinicAdmin = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(97, 212, 195));

        jButton1.setText("<-");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("MANAGE CLINIC");

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton2.setText("ADD");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton3.setText("DELETE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton4.setText("VIEW");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton5.setText("UPDATE");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton5)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jButton4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addComponent(jButton2)
                .addGap(39, 39, 39)
                .addComponent(jButton3)
                .addGap(46, 46, 46)
                .addComponent(jButton4)
                .addGap(41, 41, 41)
                .addComponent(jButton5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ParentPanel.setLayout(new java.awt.CardLayout());

        AddClinicPanel.setBackground(new java.awt.Color(0, 0, 102));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(97, 212, 195));
        jLabel5.setText("CONTACT:");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(97, 212, 195));
        jLabel6.setText("EMAIL:");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(97, 212, 195));
        jLabel8.setText("CITY:");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(97, 212, 195));
        jLabel9.setText("STATE:");

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(97, 212, 195));
        jLabel10.setText("COUNTRY:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(97, 212, 195));
        jLabel3.setText("CLINIC NAME:");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(97, 212, 195));
        jLabel11.setText("ADMIN:");

        clinicAdminDropDown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", " " }));

        AddClinicButton.setText("ADD");
        AddClinicButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddClinicButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("ADD CLINIC FORM");

        jLabel25.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(97, 212, 195));
        jLabel25.setText("Location :");

        javax.swing.GroupLayout AddClinicPanelLayout = new javax.swing.GroupLayout(AddClinicPanel);
        AddClinicPanel.setLayout(AddClinicPanelLayout);
        AddClinicPanelLayout.setHorizontalGroup(
            AddClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddClinicPanelLayout.createSequentialGroup()
                .addGroup(AddClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddClinicPanelLayout.createSequentialGroup()
                        .addGap(277, 277, 277)
                        .addComponent(AddClinicButton))
                    .addGroup(AddClinicPanelLayout.createSequentialGroup()
                        .addGap(183, 183, 183)
                        .addGroup(AddClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel11)
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(AddClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(locationTextField)
                            .addComponent(clinicNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                            .addComponent(clinicAdminDropDown, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(228, Short.MAX_VALUE))
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(AddClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(AddClinicPanelLayout.createSequentialGroup()
                    .addGap(209, 209, 209)
                    .addGroup(AddClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel10)
                        .addComponent(jLabel9)
                        .addComponent(jLabel8)
                        .addComponent(jLabel6)
                        .addComponent(jLabel5))
                    .addGap(18, 18, 18)
                    .addGroup(AddClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(contactField, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                        .addComponent(emailField, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                        .addComponent(cityField, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                        .addComponent(stateField, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                        .addComponent(countryField, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))
                    .addContainerGap(227, Short.MAX_VALUE)))
        );
        AddClinicPanelLayout.setVerticalGroup(
            AddClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddClinicPanelLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel2)
                .addGap(36, 36, 36)
                .addGroup(AddClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(clinicNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(97, 97, 97)
                .addGroup(AddClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(locationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 240, Short.MAX_VALUE)
                .addGroup(AddClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(clinicAdminDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(AddClinicButton)
                .addGap(55, 55, 55))
            .addGroup(AddClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(AddClinicPanelLayout.createSequentialGroup()
                    .addGap(132, 132, 132)
                    .addGroup(AddClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(contactField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(AddClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(53, 53, 53)
                    .addGroup(AddClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(cityField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(AddClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(stateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(AddClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(countryField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(244, Short.MAX_VALUE)))
        );

        ParentPanel.add(AddClinicPanel, "card2");

        DeleteClinicPanel.setBackground(new java.awt.Color(0, 0, 204));

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(97, 212, 195));
        jLabel14.setText("DELETE CLINIC");

        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(97, 212, 195));
        jLabel15.setText("SELECT:");

        findClinicDelete.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "Email" }));

        DeleteClinicButton.setText("DELETE");
        DeleteClinicButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteClinicButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DeleteClinicPanelLayout = new javax.swing.GroupLayout(DeleteClinicPanel);
        DeleteClinicPanel.setLayout(DeleteClinicPanelLayout);
        DeleteClinicPanelLayout.setHorizontalGroup(
            DeleteClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DeleteClinicPanelLayout.createSequentialGroup()
                .addContainerGap(157, Short.MAX_VALUE)
                .addGroup(DeleteClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DeleteClinicPanelLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(findClinicDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(clinicDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(154, 154, 154))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DeleteClinicPanelLayout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(214, 214, 214))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DeleteClinicPanelLayout.createSequentialGroup()
                        .addComponent(DeleteClinicButton)
                        .addGap(288, 288, 288))))
        );
        DeleteClinicPanelLayout.setVerticalGroup(
            DeleteClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DeleteClinicPanelLayout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(jLabel14)
                .addGap(26, 26, 26)
                .addGroup(DeleteClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(findClinicDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clinicDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGap(32, 32, 32)
                .addComponent(DeleteClinicButton)
                .addContainerGap(372, Short.MAX_VALUE))
        );

        ParentPanel.add(DeleteClinicPanel, "card3");

        ViewClinicPanel.setBackground(new java.awt.Color(0, 0, 102));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Clinic Name", "Contact", "Email", "Location", "City", "State", "Country", "Admin", "Admin Email"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout ViewClinicPanelLayout = new javax.swing.GroupLayout(ViewClinicPanel);
        ViewClinicPanel.setLayout(ViewClinicPanelLayout);
        ViewClinicPanelLayout.setHorizontalGroup(
            ViewClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 655, Short.MAX_VALUE)
        );
        ViewClinicPanelLayout.setVerticalGroup(
            ViewClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 593, Short.MAX_VALUE)
        );

        ParentPanel.add(ViewClinicPanel, "card4");

        UpdateClinicPanel.setBackground(new java.awt.Color(0, 0, 204));

        jLabel17.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(97, 212, 195));
        jLabel17.setText("FIND BY-");

        findClinic.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "Email" }));
        findClinic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findClinicActionPerformed(evt);
            }
        });

        FindClinicUpdate.setText("FIND");
        FindClinicUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FindClinicUpdateActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(97, 212, 195));
        jLabel18.setText("UPDATE CLINIC FORM");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(97, 212, 195));
        jLabel12.setText("CONTACT:");

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(97, 212, 195));
        jLabel13.setText("EMAIL:");

        jLabel20.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(97, 212, 195));
        jLabel20.setText("CITY:");

        jLabel21.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(97, 212, 195));
        jLabel21.setText("STATE:");

        jLabel22.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(97, 212, 195));
        jLabel22.setText("COUNTRY:");

        clinicCountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clinicCountryActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(97, 212, 195));
        jLabel4.setText("CLINIC NAME:");

        jLabel23.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(97, 212, 195));
        jLabel23.setText("ADMIN:");

        UpdateClinicButton.setText("UPDATE");
        UpdateClinicButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateClinicButtonActionPerformed(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(97, 212, 195));
        jLabel24.setText("Location:");

        javax.swing.GroupLayout UpdateClinicPanelLayout = new javax.swing.GroupLayout(UpdateClinicPanel);
        UpdateClinicPanel.setLayout(UpdateClinicPanelLayout);
        UpdateClinicPanelLayout.setHorizontalGroup(
            UpdateClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UpdateClinicPanelLayout.createSequentialGroup()
                .addContainerGap(116, Short.MAX_VALUE)
                .addGroup(UpdateClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UpdateClinicPanelLayout.createSequentialGroup()
                        .addGroup(UpdateClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel18)
                            .addGroup(UpdateClinicPanelLayout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addGap(18, 18, 18)
                                .addComponent(findClinic, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(findClinicBy, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(FindClinicUpdate)
                        .addGap(79, 79, 79))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UpdateClinicPanelLayout.createSequentialGroup()
                        .addGroup(UpdateClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(UpdateClinicPanelLayout.createSequentialGroup()
                                .addGroup(UpdateClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel20)
                                    .addComponent(jLabel21)
                                    .addComponent(jLabel22)
                                    .addComponent(jLabel23)
                                    .addComponent(jLabel24))
                                .addGap(18, 18, 18)
                                .addGroup(UpdateClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(clinicState)
                                    .addComponent(clinicCity, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(email, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(clinicContact, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(clinicName)
                                    .addComponent(clinicCountry)
                                    .addComponent(location)
                                    .addComponent(clinicAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)))
                            .addGroup(UpdateClinicPanelLayout.createSequentialGroup()
                                .addComponent(UpdateClinicButton)
                                .addGap(53, 53, 53)))
                        .addGap(206, 206, 206))))
        );
        UpdateClinicPanelLayout.setVerticalGroup(
            UpdateClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UpdateClinicPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(UpdateClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(findClinic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(findClinicBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FindClinicUpdate))
                .addGap(26, 26, 26)
                .addComponent(jLabel18)
                .addGroup(UpdateClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(UpdateClinicPanelLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(clinicName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UpdateClinicPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)))
                .addGap(18, 18, 18)
                .addGroup(UpdateClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(clinicContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(UpdateClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(UpdateClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clinicCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addGap(18, 18, 18)
                .addGroup(UpdateClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(clinicState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(UpdateClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(clinicCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(UpdateClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(clinicAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(UpdateClinicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel24)
                    .addComponent(location, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 103, Short.MAX_VALUE)
                .addComponent(UpdateClinicButton)
                .addGap(63, 63, 63))
        );

        ParentPanel.add(UpdateClinicPanel, "card5");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ParentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(ParentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        SysAdminMainFrame sa = new SysAdminMainFrame();
        ManageClinicForm mc = new ManageClinicForm();
        sa.setVisible(true);
        mc.setVisible(false);
        super.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        ParentPanel.removeAll();
        ParentPanel.add(AddClinicPanel);
        ParentPanel.repaint();
        ParentPanel.revalidate();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        ParentPanel.removeAll();
        ParentPanel.add(DeleteClinicPanel);
        ParentPanel.repaint();
        ParentPanel.revalidate();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed




        // TODO add your handling code here:
        ParentPanel.removeAll();
        ParentPanel.add(ViewClinicPanel);
        ParentPanel.repaint();
        ParentPanel.revalidate();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        ParentPanel.removeAll();
        ParentPanel.add(UpdateClinicPanel);
        ParentPanel.repaint();
        ParentPanel.revalidate();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void clinicCountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clinicCountryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clinicCountryActionPerformed

    private void AddClinicButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddClinicButtonActionPerformed
        // TODO add your handling code here:
        String clinicName = clinicNameField.getText();
        String email = emailField.getText();
        String contact = contactField.getText();
//        String street = streetField.getText();
        String city = cityField.getText();
        String state = stateField.getText();
        String country = countryField.getText();
        //String date = dateFormat.format(dobDate.getDate());
        String emailPattern = "^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"
                + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$";

        String phonePattern = "(0|91)?[6-9][0-9]{9}";
        String clinicAdmin = clinicAdminDropDown.getSelectedItem().toString();
        PreparedStatement pst;
        try {
            pst = sqlConn.prepareStatement("SELECT Email from `vds`.`user` WHERE fName =?");
            pst.setString(1, clinicAdmin);
            ResultSet rs = pst.executeQuery();

            while (rs.next()) {

                clinicEmail = rs.getString(1);
            }

        } catch (SQLException ex) {
            Logger.getLogger(ManageHospitalForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        String namePattern = "[a-zA-Z_ ]+";

        if (clinicName.isEmpty() || email.isEmpty() || contact.isEmpty() || city.isEmpty() || state.isEmpty() || country.isBlank()) {
            JOptionPane.showMessageDialog(this, "Enter All Details", "Warning",
                    JOptionPane.ERROR_MESSAGE);
        } else if (!clinicName.matches(namePattern)) {
            JOptionPane.showMessageDialog(this, "Enter correct details", "Warning",
                    JOptionPane.ERROR_MESSAGE);
        } else if (!email.matches(emailPattern)) {
            JOptionPane.showMessageDialog(this, "Enter a Valid Email", "Warning",
                    JOptionPane.ERROR_MESSAGE);
        } else if (!contact.matches(phonePattern)) {
            JOptionPane.showMessageDialog(this, "Enter a Valid Phone Number", "Warning",
                    JOptionPane.ERROR_MESSAGE);
        } else {
            PreparedStatement pst1;
            try {
                pst1 = sqlConn.prepareStatement("INSERT INTO `clinic`( `Name`, `Contact`, `Email`,  `City`, `State`, `Country`, `Admin`, `AdminEmail`, `Location`)  VALUES  (?,?,?,?,?,?,?,?,?)");
                pst1.setString(1, clinicName);
                System.out.println("here");
                pst1.setString(2, contact);
                pst1.setString(3, email);
                pst1.setString(4, city);
                pst1.setString(5, state);
                pst1.setString(6, country);
                pst1.setString(7, clinicAdminDropDown.getSelectedItem().toString());
                pst1.setString(8, clinicEmail);
                pst1.setString(9, locationTextField.getText());
//               ResultSet rs =  pst1.ex();
                pst1.executeUpdate();
            } catch (SQLException ex) {
                Logger.getLogger(ManageHospitalForm.class.getName()).log(Level.SEVERE, null, ex);
            }

            JOptionPane.showMessageDialog(this, "Clinic Added Successfully", "Welcome",
                    JOptionPane.INFORMATION_MESSAGE);

        }

    }//GEN-LAST:event_AddClinicButtonActionPerformed

    private void UpdateClinicButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateClinicButtonActionPerformed
        PreparedStatement pst;
        try {
            pst = sqlConn.prepareStatement("UPDATE clinic SET Name = ?,Contact = ?,Email = ?,City =? ,State = ?,Country =?,Admin=?,Location=?   Where ClinicID = ?");
            pst.setString(1, clinicName.getText());
            pst.setString(2, clinicContact.getText());
            pst.setString(3, email.getText());
            pst.setString(4, clinicCity.getText());
            pst.setString(5, clinicState.getText());
            pst.setString(6, clinicCountry.getText());
            pst.setString(7, clinicAdmin.getText());
            pst.setString(8, location.getText());
            pst.setString(9, findClinicBy.getText());
            pst.executeUpdate();
            JOptionPane.showMessageDialog(this, "Clinic Updated Successfully", "Welcome",
                    JOptionPane.INFORMATION_MESSAGE);
            clinicName.setText("");
            clinicContact.setText("");
            email.setText("");
            clinicCity.setText("");
            clinicState.setText("");
            clinicCountry.setText("");
            clinicAdmin.setText("");
            location.setText("");

        } catch (SQLException ex) {
            Logger.getLogger(ManageHospitalForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_UpdateClinicButtonActionPerformed

    private void findClinicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findClinicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_findClinicActionPerformed

    private void FindClinicUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FindClinicUpdateActionPerformed
        String findUpdate = findClinic.getSelectedItem().toString();
        if (findUpdate.matches("ID")) {

            PreparedStatement pst;
            try {
                pst = sqlConn.prepareStatement("SELECT Name,Contact,Email,City,State,Country,Admin,Location from clinic Where ClinicID = ?");
                pst.setString(1, findClinicBy.getText());
                ResultSet rs = pst.executeQuery();

                while (rs.next()) {
                    clinicName.setText(rs.getString(1));
                    clinicContact.setText(rs.getString(2));
                    email.setText(rs.getString(3));
                    clinicCity.setText(rs.getString(4));
                    clinicState.setText(rs.getString(5));
                    clinicCountry.setText(rs.getString(6));
                    clinicAdmin.setText(rs.getString(7));
                    location.setText(rs.getString(8));

                }

            } catch (SQLException ex) {
                Logger.getLogger(ManageHospitalForm.class.getName()).log(Level.SEVERE, null, ex);
            }

//                clinicAdminDropDown.setModel(new DefaultComboBoxModel<String>(clinicAdmins.toArray(new String[0])));
        } else {
            PreparedStatement pst;
            try {
                pst = sqlConn.prepareStatement("SELECT Name,Contact,Email,City,State,Country,Admin,Location from clinic Where Email = ?");
                pst.setString(1, findClinicBy.getText());
                ResultSet rs = pst.executeQuery();

                while (rs.next()) {
                    clinicName.setText(rs.getString(1));
                    clinicContact.setText(rs.getString(2));
                    email.setText(rs.getString(3));
                    clinicCity.setText(rs.getString(4));
                    clinicState.setText(rs.getString(5));
                    clinicCountry.setText(rs.getString(6));
                    clinicAdmin.setText(rs.getString(7));
                    location.setText(rs.getString(8));

                }

            } catch (SQLException ex) {
                Logger.getLogger(ManageHospitalForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(this, "Clinic Delete Successfully", "Welcome",
                    JOptionPane.INFORMATION_MESSAGE);
        }// TODO add your handling code here:
    }//GEN-LAST:event_FindClinicUpdateActionPerformed

    private void DeleteClinicButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteClinicButtonActionPerformed
        String findUpdate = findClinicDelete.getSelectedItem().toString();
        if (findUpdate.matches("ID")) {

            PreparedStatement pst;
            try {
                pst = sqlConn.prepareStatement("Delete from clinic Where ClinicID = ?");
                pst.setString(1, clinicDelete.getText());
                 pst.executeUpdate();

               
            } catch (SQLException ex) {
                Logger.getLogger(ManageHospitalForm.class.getName()).log(Level.SEVERE, null, ex);
            }

//                clinicAdminDropDown.setModel(new DefaultComboBoxModel<String>(clinicAdmins.toArray(new String[0])));
        } else {
            PreparedStatement pst;
            try {
                pst = sqlConn.prepareStatement("DELETE from clinic Where Email = ?");
                pst.setString(1, clinicDelete.getText());
                pst.executeUpdate();

                

            } catch (SQLException ex) {
                Logger.getLogger(ManageHospitalForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
// TODO add your handling code here:
    }//GEN-LAST:event_DeleteClinicButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageClinicForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageClinicForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageClinicForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageClinicForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageClinicForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddClinicButton;
    private javax.swing.JPanel AddClinicPanel;
    private javax.swing.JButton DeleteClinicButton;
    private javax.swing.JPanel DeleteClinicPanel;
    private javax.swing.JButton FindClinicUpdate;
    private javax.swing.JPanel ParentPanel;
    private javax.swing.JButton UpdateClinicButton;
    private javax.swing.JPanel UpdateClinicPanel;
    private javax.swing.JPanel ViewClinicPanel;
    private javax.swing.JTextField cityField;
    private javax.swing.JTextField clinicAdmin;
    private javax.swing.JComboBox<String> clinicAdminDropDown;
    private javax.swing.JTextField clinicCity;
    private javax.swing.JTextField clinicContact;
    private javax.swing.JTextField clinicCountry;
    private javax.swing.JTextField clinicDelete;
    private javax.swing.JTextField clinicName;
    private javax.swing.JTextField clinicNameField;
    private javax.swing.JTextField clinicState;
    private javax.swing.JTextField contactField;
    private javax.swing.JTextField countryField;
    private javax.swing.JTextField email;
    private javax.swing.JTextField emailField;
    private javax.swing.JComboBox<String> findClinic;
    private javax.swing.JTextField findClinicBy;
    private javax.swing.JComboBox<String> findClinicDelete;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField location;
    private javax.swing.JTextField locationTextField;
    private javax.swing.JTextField stateField;
    // End of variables declaration//GEN-END:variables
}
